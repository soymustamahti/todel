name: main
on:
  push:
    branches:
      - main
      - staging
      - develop

permissions:
  id-token: write
  contents: read

env:
  NODE_VERSION: "20.x"

jobs:
  eas-update-publish:
    name: EAS Update - Publish to Expo Go
    runs-on: ubuntu-latest
    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
          expo-cache: true

      - name: Install dependencies
        run: npm install

      - name: Publish to Expo Go
        run: |
          cd apps/native
          eas update --auto --non-interactive

  # docker-publish-back:
  #   name: Docker Publish - Back
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./apps/back
  #         push: true
  #         tags: soymustael/mobile-fs-mono:${{ github.ref_name }}

  # deploy-to-droplet:
  #   needs: docker-publish-back
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Install SSH client
  #       run: sudo apt-get install -y openssh-client

  #     - name: SSH into Droplet, pull image, and run container
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.DROPLET_SSH_HOST }}
  #         username: ${{ secrets.DROPLET_SSH_USERNAME }}
  #         key: ${{ secrets.DROPLET_SSH_PRIVATE_KEY }}
  #         port: ${{ secrets.DROPLET_SSH_PORT }}
  #         script: |
  #           docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
  #           docker pull soymustael/mobile-fs-mono:${{ github.ref_name }}
  #           if [ "$(docker ps -a | grep server-${{ github.ref_name }})" ]; then
  #               docker stop server-${{ github.ref_name }}
  #               docker rm server-${{ github.ref_name }}
  #           fi
  #           if [ "${{ github.ref_name }}" = "main" ]; then
  #           docker run -d --name server-${{ github.ref_name }} --network host -p 3333:3333 --env-file /root/.env.${{ github.ref_name }} soymustael/mobile-fs-mono:${{ github.ref_name }}
  #           elif [ "${{ github.ref_name }}" = "develop" ]; then
  #           docker run -d --name server-${{ github.ref_name }} --network host -p 4444:4444 --env-file /root/.env.${{ github.ref_name }} soymustael/mobile-fs-mono:${{ github.ref_name }}
  #           elif [ "${{ github.ref_name }}" = "staging" ]; then
  #           docker run -d --name server-${{ github.ref_name }} --network host -p 5555:5555 --env-file /root/.env.${{ github.ref_name }} soymustael/mobile-fs-mono:${{ github.ref_name }}
  #           else
  #           echo "Unsupported branch: ${{ github.ref_name }}"
  #           exit 1
  #           fi
